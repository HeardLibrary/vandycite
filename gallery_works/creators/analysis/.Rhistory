ggplot(data = co2, aes(x= "", y=metric_tons, fill = sector)) + # The x variable is a dummy variable
geom_col(width = 1, color = "black", position = "fill") + # "fill" makes the bars fractional
facet_wrap(~State)
head(tennessee_counties)
# Load built-in county map data for Tennessee
tennessee_counties <- map_data("county", "tennessee")
head(tennessee_counties)
# Recreate data for energy use for top 5 states
# Wrangle data to remove unwanted rows and columns, and sort descending
co2_wide <- read.xlsx(xlsxFile = "https://github.com/HeardLibrary/digital-scholarship/raw/master/data/codegraf/co2_state_2016_sector.xlsx") %>%
head(-1) # remove the last "total" row
View(co2_wide)
install.packages("shiny")
library(shiny)
runExample("01_hello")
library(shiny)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#75AADB", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
# Define UI for app that draws a histogram ----
ui <- fluidPage(
# App title ----
titlePanel("Hello Shiny!"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
)
shinyApp(ui = ui, server = server)
runApp('shiny')
runApp('shiny')
print(p)
library(ggplot2)
p <- ggplot(faithful, aes(waiting)) +
geom_histogram(bins = bins)
bins <- 40
p <- ggplot(faithful, aes(waiting)) +
geom_histogram(bins = bins)
print(p)
runApp('shiny')
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
bins <- seq(min(x), max(x), length.out = 30 + 1)
ggplot(faithful, aes(waiting)) +
geom_histogram(bins = bins)
runApp('shiny')
faithful
head(faithful)
ggplot(faithful, aes(waiting)) +
geom_histogram(bins = 40)
ggplot(faithful, aes(waiting)) +
geom_histogram(bins = bins)
ggplot(faithful, aes(waiting)) +
geom_histogram(bins = bin_number)
bin_number <- 40
ggplot(faithful, aes(waiting)) +
geom_histogram(bins = bin_number)
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='baskaufs', token='4ACFAA647749A349CE80E70192E01AA3', secret='D3GCV2WwW38CD0OtNrG87+8SbrqqrAeEOE0Qrzjw')
runApp('shiny')
library(rsconnect)
rsconnect::deployApp('app.R')
getwd()
rsconnect::deployApp('/Users/baskausj/app.R')
rsconnect::deployApp('/Users/baskausj/shiny/app.R')
rsconnect::deployApp('/Users/baskausj/shiny/')
runApp('shiny')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
setwd("/Users/baskausj/github/vandycite/gallery_works/creators/analysis")
data <- read_csv("analysis.csv")
library(tidyverse)
data <- read_csv("analysis.csv")
artists <- read_csv("analysis.csv")
ggplot(data = artists) +
geom_col(mapping = aes(x = gender, y= added, fill = count))
ggplot(data = artists) +
geom_col(mapping = aes(x = gender, y= count, fill = added))
ggplot(data = artists) +
geom_col(mapping = aes(x = gender, y= count, fill = added), position = "dodge")
ggplot(data = artists) +
geom_col(mapping = aes(x = added, y= count, fill = gender), position = "dodge")
ggplot(data = artists) +
geom_col(mapping = aes(x = added, y= count, fill = gender), position = "fill")
artists$gender <- factor(artists$gender, c("female", "male"))
ggplot(data = artists) +
geom_col(mapping = aes(x = added, y= count, fill = gender), position = "fill")
artists$gender <- factor(artists$gender, c("male", "female" ))
ggplot(data = artists) +
geom_col(mapping = aes(x = added, y= count, fill = gender), position = "fill")
ggplot(data = artists) +
geom_col(mapping = aes(x = added, y= count, fill = gender), position = "fill") +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
ggplot(data = artists) +
geom_col(mapping = aes(x = added, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = added, y= count, fill = gender), position = "fill") +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
artists <- read_csv("analysis.csv")
artists$gender <- factor(artists$gender, c("male", "female" ))
ggplot(data = artists) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base <- ggplot(data = artists) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~ulan, nrow = 2)
base <- ggplot(data = artists) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~ulan, nrow = 2)
# use color vision deficiency palette
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
base <- ggplot(data = artists) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~ulan, nrow = 2)
# use color vision deficiency palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
artists <- read_csv("analysis.csv")
artists$gender <- factor(artists$gender, c("male", "female" ))
base <- ggplot(data = artists) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~ulan, nrow = 2)
setwd("/Users/baskausj/github/vandycite/gallery_works/creators/analysis")
# use color vision deficiency palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
artists <- read_csv("analysis.csv")
artists$gender <- factor(artists$gender, c("male", "female" ))
base <- ggplot(data = artists) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~ulan, nrow = 2)
base <- ggplot(data = artists) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#  geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~`Wikidata status`, nrow = 2)
base <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
#geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~`Wikidata status`, nrow = 2)
base <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~`Wikidata status`, nrow = 2)
base <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~`Wikidata status`, nrow = 2)
library(patchwork)
# Make plot using facets
base <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
base + facet_wrap(~`Wikidata status`, nrow = 2)
# Lay out plots manually
existing <- filter(artists, `Wikidata status` = "existing")
# Lay out plots manually
existing <- filter(artists, `Wikidata status` == "existing")
added <- filter(artists, `Wikidata status` == "added")
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
ex_plot + add_plot
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "artists already in Wikidata",
y = "fraction of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
ex_plot + add_plot
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "number of artists"
)
ex_plot + add_plot
# plot using relative numbers
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "number of artists"
)
ex_plot + add_plot
# Plot using absolute numbers
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
theme(legend.position = "none") +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "number of artists"
)
ex_plot + add_plot
# plot using relative numbers
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
theme(legend.position = "none") +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "number of artists"
)
ex_plot + add_plot
# plot using relative numbers
ex_plot <- ggplot(data = existing) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
theme(legend.position = "none") +
labs(
x = "artists already in Wikidata",
y = "fraction of artists"
)
add_plot <- ggplot(data = added) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "dodge") +
geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
labs(
x = "added to Wikidata",
y = "fraction of artists"
)
ex_plot + add_plot
artists <- read_csv("new_artists.csv")
# Plot using absolute numbers
ex_plot <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = birthdate), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
ex_plot
artists$birthdate <- factor(artists$birthdate, c("all", "after 1900", "after 1950" ))
# Plot using absolute numbers
ex_plot <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = `Wikidata status`, y= count, fill = birthdate), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
ex_plot
# Plot using absolute numbers
ex_plot <- ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = birthdate, y= count, fill = `Wikidata status`), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "artists already in Wikidata",
y = "number of artists"
)
ex_plot
# Plot using absolute numbers
ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = birthdate, y= count, fill = `Wikidata status`), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "date of birth",
y = "number of artists"
)
cbPalette <- c("#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
artists <- read_csv("new_artists.csv")
artists$birthdate <- factor(artists$birthdate, c("all", "after 1900", "after 1950" ))
# Plot using absolute numbers
ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = birthdate, y= count, fill = `Wikidata status`), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "date of birth",
y = "number of artists"
)
cbPalette <- c("#0072B2", "#D55E00", "#CC79A7", "#999999")
artists <- read_csv("new_artists.csv")
artists$birthdate <- factor(artists$birthdate, c("all", "after 1900", "after 1950" ))
# Plot using absolute numbers
ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = birthdate, y= count, fill = `Wikidata status`), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "date of birth",
y = "number of artists"
)
artists$`Wikidata status` <- factor(artists$`Wikidata status`, c("existing", "added" ))
# Plot using absolute numbers
ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = birthdate, y= count, fill = `Wikidata status`), position = "dodge") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "date of birth",
y = "number of artists"
)
# Plot using relative numbers
ggplot(data = artists) +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender)) +
geom_col(mapping = aes(x = birthdate, y= count, fill = `Wikidata status`), position = "fill") +
#geom_col(mapping = aes(x = ulan, y= count, fill = gender), position = "fill") +
scale_fill_manual(values=cbPalette) +
#theme(legend.position = "none") +
labs(
x = "date of birth",
y = "fraction of artists"
)
